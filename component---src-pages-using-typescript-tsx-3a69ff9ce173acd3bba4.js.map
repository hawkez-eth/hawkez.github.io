{"version":3,"sources":["webpack:///./src/pages/using-typescript.tsx","webpack:///./src/components/footer.js","webpack:///./src/components/layout.js"],"names":["UsingTypescript","data","path","title","site","buildTime","href","to","Footer","mt","p","bg","color","maxW","textAlign","my","mb","size","fontSize","spacing","justify","name","src","boxSize","variant","colorScheme","opacity","Date","getFullYear","Layout","children","useStaticQuery","siteTitle","siteMetadata","mx"],"mappings":"6FAAA,oEAyCeA,UA5ByC,SAAH,OAAMC,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAAI,OACnE,kBAAC,IAAM,KACL,kBAAC,IAAG,CAACC,MAAM,qBACX,4BAAI,0CACJ,2BAAG,4CACwC,4BAAI,YAAa,+DACd,4BAAI,eAAgB,wEAGlE,2BAAG,4CACwC,4BAAI,cAAe,oBACxD,4BAAI,cAAe,gBAAa,4BAAI,aAAc,UAExD,2BAAG,kCAC8BD,EAAK,uBAAqB,IACxDD,EAAKG,KAAKC,UAAU,KAEvB,2BAAG,kCAC+B,IAChC,uBAAGC,KAAK,6CAA4C,kCAEhD,KAGN,kBAAC,OAAI,CAACC,GAAG,KAAI,8B,uHCWFC,EAnCA,WAAH,OACV,kBAAC,IAAG,CAACC,GAAI,EAAGC,EAAG,EAAGC,GAAG,OAAOC,MAAM,QAChC,kBAAC,IAAS,CAACC,KAAK,gBACd,kBAAC,IAAG,CAACC,UAAU,SAASC,GAAI,IAC1B,kBAAC,IAAO,CAACC,GAAI,EAAGC,KAAK,OAAM,uBAG3B,kBAAC,IAAI,CAACD,GAAI,EAAGE,SAAS,MAAK,kMAG+B,IACxD,2BAAG,mBAAoB,WAAQ,IAC/B,2BAAG,uDAAwD,eAAY,IACvE,2BAAG,cAAe,8BAEpB,kBAAC,IAAM,CAACC,QAAS,EAAGC,QAAQ,SAASJ,GAAI,GACvC,kBAAC,IAAM,CAACK,KAAK,cAAcC,IAAI,+BAC7B,kBAAC,IAAW,CAACC,QAAQ,MAAMZ,GAAG,eAEhC,kBAAC,IAAI,KACH,2BAAG,eAAe,6BAGtB,kBAAC,IAAM,CAACa,QAAQ,QAAQC,YAAY,SAAST,GAAI,GAC/C,uBAAGV,KAAK,6BAA4B,wBAGxC,kBAAC,IAAI,CAACY,SAAS,KAAKQ,QAAQ,KAAKZ,UAAU,UAAS,MAC/C,IAAIa,MAAOC,cAAc,wDCCrBC,IA1BA,SAAH,GAAsB,IAAD,EAAfC,EAAQ,EAARA,SACV7B,EAAO8B,yBAAe,cAU5B,OACE,oCACE,kBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAA/B,EAAKG,KAAK6B,oBAAY,aAAtB,EAAwB9B,QAAK,UAChD,kBAAC,IAAG,CAAC+B,GAAG,OAAOrB,KAAM,KAAMH,EAAG,CAAC,EAAG,GAAI,GAAI,GAAI,MAAOD,GAAI,GAAIO,GAAI,IAC/D,8BAAOc,IAET,kBAAC,EAAM","file":"component---src-pages-using-typescript-tsx-3a69ff9ce173acd3bba4.js","sourcesContent":["// If you don't want to use TypeScript you can delete this file!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\ntype DataProps = {\r\n  site: {\r\n    buildTime: string\r\n  }\r\n}\r\n\r\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path }) => (\r\n  <Layout>\r\n    <SEO title=\"Using TypeScript\" />\r\n    <h1>Gatsby supports TypeScript by default!</h1>\r\n    <p>\r\n      This means that you can create and write <em>.ts/.tsx</em> files for your\r\n      pages, components etc. Please note that the <em>gatsby-*.js</em> files\r\n      (like gatsby-node.js) currently don't support TypeScript yet.\r\n    </p>\r\n    <p>\r\n      For type checking you'll want to install <em>typescript</em> via npm and\r\n      run <em>tsc --init</em> to create a <em>.tsconfig</em> file.\r\n    </p>\r\n    <p>\r\n      You're currently on the page \"{path}\" which was built on{\" \"}\r\n      {data.site.buildTime}.\r\n    </p>\r\n    <p>\r\n      To learn more, head over to our{\" \"}\r\n      <a href=\"https://www.gatsbyjs.com/docs/typescript/\">\r\n        documentation about TypeScript\r\n      </a>\r\n      .\r\n    </p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default UsingTypescript\r\n\r\nexport const query = graphql`\r\n  {\r\n    site {\r\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\r\n    }\r\n  }\r\n`\r\n","import {\r\n  Avatar,\r\n  AvatarBadge,\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Heading,\r\n  HStack,\r\n  Text,\r\n} from \"@chakra-ui/react\"\r\nimport { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\nconst Footer = () => (\r\n  <Box mt={4} p={8} bg=\"#000\" color=\"#fff\">\r\n    <Container maxW=\"container.lg\">\r\n      <Box textAlign=\"center\" my={20}>\r\n        <Heading mb={6} size=\"3xl\">\r\n          Let's work together\r\n        </Heading>\r\n        <Text mb={8} fontSize=\"xl\">\r\n          Whether you already have something big cooking behind the scene, or\r\n          any ideas that come to your mind but you don't know how to actually\r\n          implement it, and want some consultations on either the{\" \"}\r\n          <b>protocol design</b>, or the{\" \"}\r\n          <b>tech development of frontend/backend/smart contract</b>, or even an{\" \"}\r\n          <b>NFT launch</b>, feel free to contact me.\r\n        </Text>\r\n        <HStack spacing={2} justify=\"center\" mb={8}>\r\n          <Avatar name=\"Anthony Lau\" src=\"../../tornado-cash-logo.png\">\r\n            <AvatarBadge boxSize=\"1em\" bg=\"green.500\" />\r\n          </Avatar>\r\n          <Text>\r\n            <b>Reply time:</b> within 1-2 working days\r\n          </Text>\r\n        </HStack>\r\n        <Button variant=\"solid\" colorScheme=\"purple\" mb={6}>\r\n          <a href=\"mailto:anty1025@gmail.com\">anty1025@gmail.com</a>\r\n        </Button>\r\n      </Box>\r\n      <Text fontSize=\"xs\" opacity=\".6\" textAlign=\"center\">\r\n        © {new Date().getFullYear()}, All rights reserved. – Developed by\r\n        Anthony Lau\r\n      </Text>\r\n    </Container>\r\n  </Box>\r\n)\r\n\r\nexport default Footer\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.com/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nimport Header from \"./header\"\r\nimport Footer from \"./footer\"\r\n//import \"./layout.css\"\r\nimport { Box } from \"@chakra-ui/react\"\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\r\n      <Box mx=\"auto\" maxW={1100} p={[6, 12, 12, 12, null]} mt={20} mb={10}>\r\n        <main>{children}</main>\r\n      </Box>\r\n      <Footer />\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}