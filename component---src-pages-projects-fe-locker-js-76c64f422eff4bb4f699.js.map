{"version":3,"sources":["webpack:///./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack:///./src/pages/projects/feLocker.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","Grid","props","ref","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","rest","styles","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","div","__css","spanFn","span","value","displayName","GridItem","colSpan","colStart","colEnd","rowEnd","rowSpan","rowStart","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","developFlow","direction","base","md","spacing","pt","pb","align","id","flex","size","textTransform","opacity","my","fontSize","textAlign","colorScheme","to","variant","ml","onClick","document","querySelector","scrollIntoView","behavior","columns","SimpleGrid","count","width","spacingX","spacingY","minChildWidth","n"],"mappings":"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","file":"component---src-pages-projects-fe-locker-js-76c64f422eff4bb4f699.js","sourcesContent":["function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { filterUndefined, mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/docs/layout/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  var styles = {\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  };\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nfunction spanFn(span) {\n  return mapResponsive(span, function (value) {\n    return value === \"auto\" ? \"auto\" : \"span \" + value + \"/span \" + value;\n  });\n}\n\nexport var GridItem = /*#__PURE__*/forwardRef(function (props, ref) {\n  var colSpan = props.colSpan,\n      colStart = props.colStart,\n      colEnd = props.colEnd,\n      rowEnd = props.rowEnd,\n      rowSpan = props.rowSpan,\n      rowStart = props.rowStart,\n      rest = _objectWithoutPropertiesLoose(props, [\"colSpan\", \"colStart\", \"colEnd\", \"rowEnd\", \"rowSpan\", \"rowStart\"]);\n\n  var styles = filterUndefined({\n    gridColumn: spanFn(colSpan),\n    gridRow: spanFn(rowSpan),\n    gridColumnStart: colStart,\n    gridColumnEnd: colEnd,\n    gridRowStart: rowStart,\n    gridRowEnd: rowEnd\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    __css: styles\n  }, rest));\n});","import { Box, Button, Heading, SimpleGrid, Stack, Text } from \"@chakra-ui/react\"\r\nimport { Link } from \"gatsby\"\r\nimport React from \"react\"\r\n\r\nconst developFlow = () => (\r\n  <Box>\r\n    <Stack\r\n      direction={{ base: \"column\", md: \"row\" }}\r\n      spacing={8}\r\n      pt={{ base: \"70px\", md: \"140px\" }}\r\n      pb={{ base: \"20px\", md: \"40px\" }}\r\n      align=\"center\"\r\n      id=\"develop-flow\"\r\n    >\r\n      <Box flex=\"1\">\r\n        <Text size=\"xs\" textTransform=\"uppercase\" opacity=\"0.4\">\r\n          Develop Flow\r\n        </Text>\r\n        <Heading size=\"xl\" my={2}>\r\n          Gather. Analysis. Implement. Continue.\r\n        </Heading>\r\n        <Text opacity=\"0.6\" fontSize=\"lg\">\r\n          Always trying to write efficient code at the most neat and clean\r\n          manner, also always strive for a balance between readibility and\r\n          speciality.\r\n        </Text>\r\n      </Box>\r\n      <Box flex=\"1\" textAlign=\"right\">\r\n        <Button colorScheme=\"purple\">\r\n          <Link to=\"#project-gallery\">Start a Project</Link>\r\n        </Button>\r\n        <Button\r\n          colorScheme=\"purple\"\r\n          variant=\"outline\"\r\n          ml={6}\r\n          onClick={() =>\r\n            document\r\n              .querySelector(\"#project-gallery\")\r\n              .scrollIntoView({ behavior: \"smooth\" })\r\n          }\r\n        >\r\n          Learn more\r\n        </Button>\r\n      </Box>\r\n    </Stack>\r\n    <SimpleGrid\r\n      columns={{ base: 1, md: 2 }}\r\n      spacing={16}\r\n      pb={{ base: \"70px\", md: \"140px\" }}\r\n      pt={{ base: \"20px\", md: \"40px\" }}\r\n    >\r\n      <Box>\r\n        <Heading size=\"xl\" my={2}>\r\n          Strategy\r\n        </Heading>\r\n        <Text fontSize=\"lg\">\r\n          <b>Ask first.</b> Before jumping into designing I always make sure\r\n          that we’re asking the right questions and trying to accomplish the\r\n          right challenges. This stage includes market research, competitive\r\n          analyses, consulting and exploring possible solutions.\r\n        </Text>\r\n      </Box>\r\n      <Box>\r\n        <Heading size=\"xl\" my={2}>\r\n          Design\r\n        </Heading>\r\n        <Text fontSize=\"lg\">\r\n          <b>Problem solving.</b> At the end of this phase you’ll have a pixel\r\n          perfect design for your app or website. During the transition from\r\n          wireframes into the final design I create prototypes simulating final\r\n          end results before development.\r\n        </Text>\r\n      </Box>\r\n      <Box>\r\n        <Heading size=\"xl\" my={2}>\r\n          Development\r\n        </Heading>\r\n        <Text fontSize=\"lg\">\r\n          <b>Bringing designs to life.</b> Since I’m a designer who can code\r\n          too, I can easily work in close collaboration with developers up until\r\n          the finish line and beyond. In case of web projects I also do\r\n          front-end development.\r\n        </Text>\r\n      </Box>\r\n      <Box>\r\n        <Heading size=\"xl\" my={2}>\r\n          Debug\r\n        </Heading>\r\n        <Text fontSize=\"lg\">\r\n          <b>Transparent process</b>. Complete overview of my design process\r\n          through regular meetings. After the initial design versions I’m happy\r\n          to do user testing with your customers to ensure the best possible\r\n          solutions for their needs.\r\n        </Text>\r\n      </Box>\r\n    </SimpleGrid>\r\n  </Box>\r\n)\r\n\r\nexport default developFlow\r\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/docs/layout/simple-grid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function (props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = minChildWidth ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", 1fr)\";\n  });\n}"],"sourceRoot":""}